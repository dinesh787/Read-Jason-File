package com.viacom18.Content.app.show_daily_app
  import org.apache.spark.sql.{SQLContext, SparkSession}

  object show_daily {

  val spark = SparkSession
    .builder()
    .appName("showdailyapp")
    .enableHiveSupport()
//    .config("fs.wasbs.impl", "org.apache.hadoop.fs.azure.NativeAzureFileSystem")
//    .config("fs.AbstractFileSystem.wasb.impl", "org.apache.hadoop.fs.azure.Wasb")
//    .config("fs.azure.account.key.v18biblobstorprod.blob.core.windows.net", "K1ZcztvuFkq6Hy4P8Uf13kP3yXgXxQJBs/bKZ6Y4cfgzD/9nmjHg9uMwIbAe3ZC7vmCS59Mk/3iloAVOs3zdYQ==")
    .getOrCreate()

  val sqlcontext: SQLContext = spark.sqlContext

  def main(args: Array[String]) {
    val date_zero = args(0)
    val Load_Type = args(1)
    println("show_daily start date ", date_zero)
    println("show_daily Load type ", Load_Type)
    show_daily(date_zero,Load_Type)

  }

  def show_daily(date_zero: String , Load_type : String) = {

    val st_time = sqlcontext.sql(s""" select CURRENT_TIMESTAMP """).take(1)(0).get(0).toString

    val VOOTAPPBASE_1 =sqlcontext.sql(s"""select * from voot_app_base_ext where date_stamp = '$date_zero'""")
    VOOTAPPBASE_1.createOrReplaceTempView("VOOTAPPBASE_1")

    val CONTENT_MAPPER_1 =sqlcontext.sql("select * from CONTENT_MAPPER")
    CONTENT_MAPPER_1.createOrReplaceTempView("CONTENT_MAPPER_1")

    val SBU_CHANNEL_MAPPER_1 =sqlcontext.sql("select * from SBU_CHANNEL_MAPPER")
    SBU_CHANNEL_MAPPER_1.createOrReplaceTempView("SBU_CHANNEL_MAPPER_1")

    val cmSBU_1 = sqlcontext.sql("SELECT V.SBU_CLUSTER ,CAST(ID AS BIGINT),REF_SERIES_TITLE,channel_name_vendor_name,own_bought,kids,C.SBU,CONTENT_DURATION,GENRE,LANGUAGE,CONTENT_DURATION_SEC,START_DATE FROM CONTENT_MAPPER_1 C LEFT JOIN SBU_CHANNEL_MAPPER_1 V ON V.SBU= C.SBU")
    cmSBU_1.createOrReplaceTempView("cmSBU_1")

    val FINAL_1 = sqlcontext.sql("SELECT 'App' AS PROGRAM,CAST(DATE_STAMP AS date) AS DATE,'All Clusters' AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,'All Genres' AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,'All Languages' AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,'ALL' AS Recent_7D,'ALL' AS Recent_14D,'ALL' AS Recent_30D,'ALL' AS Recent_90D FROM VOOTAPPBASE_1 M LEFT JOIN  cmSBU_1 C on C.id = M.mediaid  GROUP BY CAST(DATE_STAMP AS date)")

    FINAL_1.createOrReplaceTempView("FINAL_1")

    val FINAL_2 = sqlcontext.sql("SELECT 'App' AS PROGRAM,CAST( m.DATE_STAMP AS DATE) AS DATE,upper(SBU_CLUSTER) AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,'All Genres' AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,'All Languages' AS CONTENT_LANGUAGE, COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS,SUM(CASE WHEN (M.app_version IN ('47','1.2.16','1.2.21') and (CAST(duration as BIGINT) between 0 and 36000) and UPPER(M.EVENT) = 'VIDEO WATCHED') THEN CAST(duration as BIGINT) WHEN (M.app_version NOT IN ('47','1.2.16','1.2.21') and (duration_seconds between 0 and 36000) and UPPER(M.event) = 'VIDEO WATCHED') THEN duration_seconds else 0 END) AS DURATION_WATCHED_SECS, 'ALL' AS Recent_7D, 'ALL' AS Recent_14D, 'ALL' AS Recent_30D, 'ALL' AS Recent_90D FROM  VOOTAPPBASE_1 M LEFT JOIN  cmSBU_1 C on C.id = M.mediaid  GROUP BY CAST(m.DATE_STAMP AS DATE),upper(SBU_CLUSTER)")


    FINAL_2.createOrReplaceTempView("FINAL_2")

    val FINAL_3 = sqlcontext.sql("SELECT 'App' AS PROGRAM,CAST(DATE_STAMP  AS DATE) AS DATE,'All Clusters' AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,upper(Genre) AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,'All Languages' AS CONTENT_LANGUAGE, COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS,SUM(CASE WHEN (M.app_version IN ('47','1.2.16','1.2.21') and (CAST(duration as BIGINT) between 0 and 36000)  and UPPER(M.event) = 'VIDEO WATCHED')THEN CAST(duration as BIGINT) WHEN (M.app_version NOT IN ('47','1.2.16','1.2.21') and (duration_seconds between 0 and 36000) and UPPER(M.event) = 'VIDEO WATCHED')THEN duration_seconds 	else 0 END)  AS DURATION_WATCHED_SECS,'ALL' AS Recent_7D,'ALL' AS Recent_14D,'ALL' AS Recent_30D,'ALL' AS Recent_90D FROM VOOTAPPBASE_1 M LEFT JOIN  cmSBU_1 C  on C.id = M.mediaid GROUP BY DATE_STAMP ,upper(GENRE)")


    FINAL_3.createOrReplaceTempView("FINAL_3")

    val FINAL_4 = sqlcontext.sql("SELECT 'App' AS PROGRAM ,CAST(DATE_STAMP AS DATE) AS DATE,upper(SBU_CLUSTER) AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,upper(Genre) AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,'All Languages' AS CONTENT_LANGUAGE, COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS,SUM(CASE WHEN (M.app_version IN ('47','1.2.16','1.2.21') and (CAST(duration as BIGINT) between 0 and 36000)  and UPPER(M.EVENT) = 'VIDEO WATCHED')THEN  CAST(duration as BIGINT) WHEN (M.app_version NOT IN ('47','1.2.16','1.2.21') and (duration_seconds between 0 and 36000) and UPPER(M.EVENT) = 'VIDEO WATCHED')THEN duration_seconds else 0 END)  AS DURATION_WATCHED_SECS,'ALL' AS Recent_7D,'ALL' AS Recent_14D,'ALL' AS Recent_30D,'ALL' AS Recent_90D FROM  VOOTAPPBASE_1 M LEFT JOIN  cmSBU_1 C on C.id = M.mediaid  GROUP BY CAST(DATE_STAMP AS DATE) ,upper(SBU_CLUSTER),upper(GENRE)")

    FINAL_4.createOrReplaceTempView("FINAL_4")

    val FINAL_5 = sqlcontext.sql("SELECT 'App' AS PROGRAM ,CAST(DATE_STAMP AS DATE) AS DATE,upper(SBU_CLUSTER) AS SBU_CLUSTER,upper(SBU) AS SBU,upper(CHANNEL_NAME_VENDOR_NAME) AS CHANNEL_VENDOR_NAME,upper(OWN_BOUGHT) AS OWN_BOUGHT_FLAG,upper(KIDS) AS KIDS_FLAG,upper(Genre) AS GENRE,0 AS CONTENT_DURATION_SEC,upper(REF_SERIES_TITLE) AS SHOW_NAME, 'All Languages' AS CONTENT_LANGUAGE, COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS,SUM(CASE WHEN (M.app_version IN ('47','1.2.16','1.2.21') and (CAST(duration as BIGINT) between 0 and 36000)  and UPPER(M.EVENT) = 'VIDEO WATCHED')   THEN CAST(duration as BIGINT) WHEN (M.app_version NOT IN ('47','1.2.16','1.2.21') and (duration_seconds between 0 and 36000) and UPPER(M.EVENT) ='VIDEO WATCHED') THEN duration_seconds else 0 END)  AS DURATION_WATCHED_SECS,'ALL' AS Recent_7D,'ALL' AS Recent_14D,'ALL' AS Recent_30D,'ALL' AS Recent_90D FROM VOOTAPPBASE_1 M  LEFT JOIN cmSBU_1 C   on C.id = M.mediaid  GROUP BY CAST(DATE_STAMP AS DATE),upper(REF_SERIES_TITLE),upper(SBU_CLUSTER),upper(SBU),upper(CHANNEL_NAME_VENDOR_NAME),upper(OWN_BOUGHT),upper(KIDS),upper(Genre)")

    FINAL_5.createOrReplaceTempView("FINAL_5")

    val FINAL_6 = sqlcontext.sql("SELECT 'App' AS PROGRAM ,CAST(DATE_STAMP AS DATE) AS DATE,upper(SBU_CLUSTER) AS SBU_CLUSTER,upper(SBU) AS SBU,upper(CHANNEL_NAME_VENDOR_NAME) AS CHANNEL_VENDOR_NAME,upper(OWN_BOUGHT) AS OWN_BOUGHT_FLAG,upper(KIDS) AS KIDS_FLAG,upper(Genre) AS GENRE,0 AS CONTENT_DURATION_SEC,upper(REF_SERIES_TITLE) AS SHOW_NAME, upper(LANGUAGE) AS CONTENT_LANGUAGE, COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS,SUM(CASE WHEN (M.app_version IN ('47','1.2.16','1.2.21') and (CAST(duration as BIGINT) between 0 and 36000)  and UPPER(M.EVENT) = 'VIDEO WATCHED')   THEN CAST(duration as BIGINT) WHEN (M.app_version NOT IN ('47','1.2.16','1.2.21') and (duration_seconds between 0 and 36000) and UPPER(M.EVENT) ='VIDEO WATCHED') THEN duration_seconds else 0 END)  AS DURATION_WATCHED_SECS,'ALL' AS Recent_7D,'ALL' AS Recent_14D,'ALL' AS Recent_30D,'ALL' AS Recent_90D FROM VOOTAPPBASE_1 M LEFT JOIN  cmSBU_1 C on C.id = M.mediaid  GROUP BY CAST(DATE_STAMP AS DATE),upper(REF_SERIES_TITLE),upper(LANGUAGE),upper(SBU_CLUSTER),upper(SBU),upper(CHANNEL_NAME_VENDOR_NAME),upper(OWN_BOUGHT),upper(KIDS),upper(Genre)")

    FINAL_6.createOrReplaceTempView("FINAL_6")

    val FINAL_7 = sqlcontext.sql("SELECT 'App' AS PROGRAM,CAST(DATE_STAMP AS DATE) AS DATE, 'All Clusters' AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,'All Genres' AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,upper(LANGUAGE) AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,'ALL' AS Recent_7D,'ALL' AS Recent_14D,'ALL' AS Recent_30D,'ALL' AS Recent_90D FROM VOOTAPPBASE_1 M  LEFT JOIN cmSBU_1 C on C.id = M.mediaid  GROUP BY CAST(DATE_STAMP AS DATE),upper(LANGUAGE)")

    FINAL_7.createOrReplaceTempView("FINAL_7")

    val FINAL_8 = sqlcontext.sql("SELECT 'App' AS PROGRAM,CAST(DATE_STAMP AS DATE) AS DATE,upper(SBU_CLUSTER) AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,'All Genres' AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,upper(LANGUAGE) AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,'ALL' AS Recent_7D,'ALL' AS Recent_14D,'ALL' AS Recent_30D,'ALL' AS Recent_90D FROM VOOTAPPBASE_1 M LEFT JOIN  cmSBU_1 C  on C.id = M.mediaid  GROUP BY CAST(DATE_STAMP AS DATE),upper(SBU_CLUSTER),upper(LANGUAGE)")

    FINAL_8.createOrReplaceTempView("FINAL_8")

    val FINAL_9 = sqlcontext.sql("SELECT 'App' AS PROGRAM,CAST(DATE_STAMP AS DATE) AS DATE, 'All Clusters' AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,upper(Genre) AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,upper(LANGUAGE) AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,'ALL' AS Recent_7D,'ALL' AS Recent_14D,'ALL' AS Recent_30D,'ALL' AS Recent_90D FROM VOOTAPPBASE_1 M LEFT JOIN cmSBU_1 C  on C.id = M.mediaid  GROUP BY CAST(DATE_STAMP AS DATE),upper(Genre),upper(LANGUAGE)")

    FINAL_9.createOrReplaceTempView("FINAL_9")

    val FINAL_10 = sqlcontext.sql("SELECT 'App' AS PROGRAM,CAST(DATE_STAMP AS DATE) AS DATE, upper(SBU_CLUSTER) AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,upper(Genre) AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,upper(LANGUAGE) AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,'ALL' AS Recent_7D,'ALL' AS Recent_14D,'ALL' AS Recent_30D,'ALL' AS Recent_90D FROM VOOTAPPBASE_1 M LEFT JOIN  cmSBU_1 C  on C.id = M.mediaid  GROUP BY CAST(DATE_STAMP AS DATE),upper(SBU_CLUSTER),upper(Genre),upper(LANGUAGE)")

    FINAL_10.createOrReplaceTempView("FINAL_10")

    val FINAL_11 = sqlcontext.sql("SELECT 'App' AS PROGRAM,M.DATE_STAMP AS DATE,'All Clusters' AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,'All Genres' AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,'All Languages' AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_7D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_14D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_30D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_90D FROM VOOTAPPBASE_1 M  LEFT JOIN cmSBU_1 C on C.id = M.mediaid  GROUP BY M.DATE_STAMP,CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END")

    FINAL_11.createOrReplaceTempView("FINAL_11")

    val FINAL_12 = sqlcontext.sql("SELECT 'App' AS PROGRAM,M.DATE_STAMP as DATE,upper(SBU_CLUSTER) AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,'All Genres' AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,'All Languages' AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_7D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_14D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_30D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_90D FROM VOOTAPPBASE_1 M  LEFT JOIN cmSBU_1 C on C.id = M.mediaid  GROUP BY M.DATE_STAMP,upper(SBU_CLUSTER),CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END")

    FINAL_12.createOrReplaceTempView("FINAL_12")

    val FINAL_13 = sqlcontext.sql("SELECT 'App' AS PROGRAM,M.DATE_STAMP  as DATE,'All Clusters' AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,upper(GENRE) AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,'All Languages' AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_7D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_14D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_30D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_90D FROM VOOTAPPBASE_1 M  LEFT JOIN cmSBU_1 C on C.id = M.mediaid  GROUP BY M.DATE_STAMP,upper(GENRE),CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END")

    FINAL_13.createOrReplaceTempView("FINAL_13")

    val FINAL_14 = sqlcontext.sql("SELECT 'App' AS PROGRAM,M.DATE_STAMP  as DATE,upper(SBU_CLUSTER) AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,upper(GENRE) AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,'All Languages' AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_7D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_14D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_30D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_90D FROM VOOTAPPBASE_1 M  LEFT JOIN  cmSBU_1 C on C.id = M.mediaid  GROUP BY M.DATE_STAMP,upper(SBU_CLUSTER),upper(GENRE),CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END")

    FINAL_14.createOrReplaceTempView("FINAL_14")

    val FINAL_15 = sqlcontext.sql("SELECT 'App' AS PROGRAM,M.DATE_STAMP  as DATE,upper(SBU_CLUSTER) AS SBU_CLUSTER,upper(SBU) AS SBU,upper(channel_name_vendor_name) AS CHANNEL_VENDOR_NAME,upper(OWN_BOUGHT) AS OWN_BOUGHT_FLAG,upper(KIDS) AS KIDS_FLAG,upper(GENRE) AS GENRE,0 AS CONTENT_DURATION_SEC,upper(REF_SERIES_TITLE) AS SHOW_NAME,'All Languages' AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_7D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_14D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_30D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_90D FROM VOOTAPPBASE_1 M  LEFT JOIN cmSBU_1 C  on C.id = M.mediaid  GROUP BY M.DATE_STAMP,upper(REF_SERIES_TITLE),CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END,upper(SBU_CLUSTER),upper(SBU),upper(channel_name_vendor_name),upper(OWN_BOUGHT),upper(KIDS),upper(GENRE)")

    FINAL_15.createOrReplaceTempView("FINAL_15")

    val FINAL_16 = sqlcontext.sql("SELECT 'App' AS PROGRAM,CAST(DATE_STAMP AS DATE) AS DATE,upper(SBU_CLUSTER) AS SBU_CLUSTER,upper(SBU) AS SBU,upper(channel_name_vendor_name) AS CHANNEL_VENDOR_NAME,upper(OWN_BOUGHT) AS OWN_BOUGHT_FLAG,upper(KIDS) AS KIDS_FLAG,upper(GENRE) AS GENRE,0 AS CONTENT_DURATION_SEC,upper(REF_SERIES_TITLE) AS SHOW_NAME,upper(LANGUAGE) AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_7D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_14D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_30D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_90D FROM VOOTAPPBASE_1 M  LEFT JOIN cmSBU_1 C on C.id = M.mediaid  GROUP BY CAST(DATE_STAMP AS DATE),upper(REF_SERIES_TITLE),upper(LANGUAGE),CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END,upper(SBU_CLUSTER),upper(SBU),upper(channel_name_vendor_name),upper(OWN_BOUGHT),upper(KIDS),upper(GENRE)")

    FINAL_16.createOrReplaceTempView("FINAL_16")

    val FINAL_17 = sqlcontext.sql("SELECT 'App' AS PROGRAM,CAST(DATE_STAMP AS DATE) AS DATE,'All Clusters' AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,'All Genres' AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,upper(LANGUAGE) AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_7D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_14D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_30D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_90D FROM VOOTAPPBASE_1 M  LEFT JOIN cmSBU_1 C on C.id = M.mediaid  GROUP BY CAST(DATE_STAMP AS DATE),upper(LANGUAGE),CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END")

    FINAL_17.createOrReplaceTempView("FINAL_17")

    val FINAL_18 = sqlcontext.sql("SELECT 'App' AS PROGRAM,CAST(DATE_STAMP AS DATE) AS DATE,upper(SBU_CLUSTER) AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,'All Genres' AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,upper(LANGUAGE) AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_7D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_14D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_30D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_90D FROM VOOTAPPBASE_1 M  LEFT JOIN cmSBU_1 C on C.id = M.mediaid  GROUP BY CAST(DATE_STAMP AS DATE),upper(SBU_CLUSTER),upper(LANGUAGE),CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END")

    FINAL_18.createOrReplaceTempView("FINAL_18")

    val FINAL_19 = sqlcontext.sql("SELECT 'App' AS PROGRAM,CAST(DATE_STAMP AS DATE) AS DATE,'All Clusters' AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,upper(GENRE) AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,upper(LANGUAGE) AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_7D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_14D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_30D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_90D FROM VOOTAPPBASE_1 M  LEFT JOIN cmSBU_1 C  on C.id = M.mediaid  GROUP BY CAST(DATE_STAMP AS DATE),upper(GENRE),upper(LANGUAGE),CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END")

    FINAL_19.createOrReplaceTempView("FINAL_19")

    val FINAL_20 = sqlcontext.sql("SELECT 'App' AS PROGRAM,CAST(DATE_STAMP AS DATE) AS DATE,upper(SBU_CLUSTER) AS SBU_CLUSTER,'ALL' AS SBU,'ALL' AS CHANNEL_VENDOR_NAME,'ALL' AS OWN_BOUGHT_FLAG,'ALL' AS KIDS_FLAG,upper(GENRE) AS GENRE,0 AS CONTENT_DURATION_SEC,'ALL' AS SHOW_NAME,upper(LANGUAGE) AS CONTENT_LANGUAGE,COUNT(DISTINCT CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN  DISTINCT_ID ELSE NULL END) AS NUM_VIEWERS, SUM(CASE WHEN UPPER(M.EVENT) = 'MEDIAREADY' THEN COUNT_PLAIN ELSE 0 END) AS NUM_VIEWS, SUM(CASE WHEN (M.APP_VERSION IN ('47','1.2.16','1.2.21') AND (CAST(DURATION as BIGINT) BETWEEN 0 AND 36000) AND UPPER(M.EVENT)= 'VIDEO WATCHED') THEN CAST(DURATION AS BIGINT) WHEN (M.APP_VERSION NOT IN ('47','1.2.16','1.2.21') AND (DURATION_SECONDS  BETWEEN 0 AND 36000) AND UPPER(M.EVENT) = 'VIDEO WATCHED')THEN DURATION_SECONDS ELSE 0 END) AS DURATION_WATCHED_SECS,CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_7D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_14D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_30D, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END AS RECENT_90D FROM VOOTAPPBASE_1 M  LEFT JOIN cmSBU_1 C on C.id = M.mediaid  GROUP BY CAST(DATE_STAMP AS DATE),upper(SBU_CLUSTER),upper(GENRE),upper(LANGUAGE),CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=7 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=14 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=30 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END, CASE WHEN DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) <=90 AND DATEDIFF(M.DATE_STAMP,date_format(from_unixtime(unix_timestamp(C.START_DATE, 'yyyy-MMM-dd HH:mm:ss')) ,'yyyy-MM-dd')) >=0 THEN  'Y' ELSE 'N' END")

    FINAL_20.createOrReplaceTempView("FINAL_20")


    val Final1To20=sqlcontext.sql("  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_1 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_2 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_3 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_4 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_5 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_6 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_7 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_8 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_9 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_10 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_11 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_12 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_13 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_14 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_15 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_16 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_17 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_18 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_19 UNION  SELECT distinct  PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_20")
    //val Final1To20=sqlcontext.sql(" SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_1 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_2 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_3 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_4 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_5 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_6 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_7 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_8 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_9 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_10 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_11 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_12 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_13 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_14 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_15 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_16 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_17 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_18 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_19 UNION SELECT PROGRAM,DATE,SBU_CLUSTER,SBU,CHANNEL_VENDOR_NAME,OWN_BOUGHT_FLAG,KIDS_FLAG,GENRE,CONTENT_DURATION_SEC,SHOW_NAME,NUM_VIEWERS,NUM_VIEWS,DURATION_WATCHED_SECS,CONTENT_LANGUAGE,Recent_7D,Recent_14D,Recent_30D,Recent_90D FROM FINAL_20")

    Final1To20.createOrReplaceTempView("Final1To20")

    val mediate=sqlcontext.sql("select distinct program ,date ,case when sbu_cluster = 'All' then 'All Clusters' else sbu_cluster end as sbu_cluster,sbu ,channel_vendor_name ,own_bought_flag ,kids_flag ,case when genre = 'All' then 'All Genres' else genre end as genre,content_duration_sec ,show_name ,num_viewers ,num_views ,DURATION_WATCHED_SECS,case when content_language = 'All' then 'All Languages' else content_language end as content_language ,recent_7d ,recent_14d ,recent_30d ,recent_90d ,date as date_part_col from Final1To20")

    mediate.createOrReplaceTempView("mediate")
    sqlcontext.sql("set hive.exec.dynamic.partition.mode=nonstrict")

    sqlcontext.sql(s"""insert into F_Agg_Show_Dly partition(date_part_col ,project_part_col) select program ,date as date_stamp,sbu_cluster,sbu ,channel_vendor_name ,own_bought_flag ,kids_flag ,genre,content_duration_sec ,show_name ,num_viewers ,num_views ,DURATION_WATCHED_SECS, content_language ,recent_7d ,recent_14d ,recent_30d ,recent_90d ,cast(`date` as date) as date_part_col ,'APP' as project_part_col from mediate where date_part_col ='$date_zero'""")

    val count = sqlcontext.sql(s""" select count(*) from  F_Agg_Show_Dly where date_part_col ='$date_zero' and project_part_col ='APP'""").take(1)(0).get(0).toString
    val end_time = sqlcontext.sql(s""" select CURRENT_TIMESTAMP """).take(1)(0).get(0).toString
    val min = sqlcontext.sql(s"""SELECT (unix_timestamp('$end_time') - unix_timestamp('$st_time'))/3600""").take(1)(0).get(0).toString.toDouble.toInt.toString

    sqlcontext.sql(s"""insert into DataTableloadHistory select CURRENT_DATE ,'$date_zero' ,'F_Agg_Show_Dly' ,'$Load_type','APP', '$count','$st_time','$end_time','$min'  from  DataTableloadHistory  limit 1""")


  }
}